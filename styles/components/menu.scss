
// Menu Item Variables
// The number of items in the menu
$menu-items: 3;
// We multiply it by 1% to get the correct % unit
$width: (100/$menu-items) * 1%;
$menu-items-loop-offset: $menu-items - 1; // the number of items in the menu

$background-color: rgba(255, 255, 255, 1);
$indicator-color: #fff;


.logo_wrapper{
  position: fixed;
 // height:40px;
  top:1.5rem;
  left:1.5rem;
  border-radius: 0.6rem ;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap:14px;
  z-index:9999;
  color: #000;
  transition: all 300ms ease;
  transform-origin: 0 0;


  .logo{
    border-radius: 0.6rem ;
    padding:0.8rem;
    transition: all 300ms ease;
    background-color: #fff;
    img{
      width:32px;
    }
  }

  .logotext{
    transition: all 300ms ease;
  }

  &.active{
    transform: scale(0.9);
    .logo{
      background-color: aquamarine;

    }
    .logotext{
      opacity: 0;
    }
  }

}



.c-menu__wrapper{
  position: fixed;
  top:1.5rem;
 // transform: translateX(-50%);
  right: 1.5rem;
  z-index:9999;

  &.active{
    
    ul.c-menu{
    background-color: $background-color;
    }
  }
}

ul.c-menu{
    border-radius: 0.6rem ;
    backdrop-filter: blur(0.6rem);
    display:flex;
    list-style: none;
    margin: 0;
    padding:0;
    gap:0;
    position: relative;// the menu is "relative" to the absolute position last-child pseudo elements.
    //    z-index: 0;
    

    
  // &:before{
  //   display: block;
  //   position: absolute;
  //   top:0px;
  //   left:-20px;
  //   backdrop-filter: blur(12px);
  //   background-color: $background-color;
  // }

    li{
    flex:1 1 0%;

        a{
        line-height: 4rem;
        padding:1.5rem;
        color:#000;
            font-size: 14px;
        }

        &:last-child {
            // make sure the last-child talks to itself
            &:hover, &.is-active {
              &:before {
               // we have to use important because the sibling selctor is more specific.
                left: (100%-$width)+($width/2) !important;
              }
              &:after{
                left: 100%-$width !important;
              }
            }        
          }
          
    }
  
    

    &.with-indicator {


        li{
            // ======================================================
            // Step 2.1 - Making the indicator with the pseudo element.
            // ======================================================
            &:last-child {
        
        
            &:after {
                    content: '';
                    display: block;
                    position: absolute;
                    pointer-events: none;
                    transition: left 300ms ease;
                }
                
                &:after {
                    background: $indicator-color;
                    // top: -6px;
                    bottom: 8px;
                    left: 0;
                    width: $width - 8;
                    margin-left:12px;
                    height:3rem;
                    background-color: aqua;
                    z-index: -1;
                    border-radius: 0.3rem;
                }
        
        
                }
            }
    }   

    @for $i from 1 through $menu-items-loop-offset {
        // when the Nav item "is active", make the indicator line up with the navigation item.
        li:nth-child(#{$i}).is-active ~ li:last-child:after {
          left:($width*$i)-$width;
        }
    }


    // This could be in the same loop as the above but for the tutorial steps it's not
    @for $i from 1 through $menu-items-loop-offset {
        // We have to use !important to make the hovers overide if the last:child is the active or hovered
        .li:nth-child(#{$i}):hover ~ .li:last-child:after {
          left:($width*$i)-$width !important;
        }     
    }
        
        // // this could be nested in the original .Nav-item
        // .li {
        //     &:last-child {
        //       // make sure the last-child talks to itself
        //       &:hover, &.is-active {
        //         &:after{
        //           left: 100%-$width !important;
        //         }
        //       }        
        //     }
        // }
    
    


}

$corner-size:12px;

.corner{

  display: block;
  content: '';
  position: absolute;
  width: $corner-size;
  height: $corner-size;
  background: $background-color;
  mask-image: radial-gradient(circle 10px at 0 0, transparent 0, transparent $corner-size, black $corner-size);
  -webkit-mask-image: radial-gradient(circle 10px at 0 0, transparent 0, transparent $corner-size, black $corner-size);
}



.inset{
position: relative;// the menu is "relative" to the absolute position last-child pseudo elements.
border-radius: 12px ;
backdrop-filter: blur(12px);
background-color: $background-color;
height: 3.5rem;
width:3.5rem;
display:flex;
list-style: none;
margin: 0;
padding:0;
gap:0;
z-index: 9999;
}


.inset--top-left{
  border-radius:0  0 12px 0 ;

  &::before{
    right:-$corner-size;
    top:0;
    @extend .corner;
    transform: rotate(180deg);

  }
  &::after{

    left:0;
    bottom:-$corner-size;
    @extend .corner;
    transform: rotate(180deg);

  }
}
.inset--top-right{
  border-radius:0  0 0 12px ;
  width:250px;
  height:64px;

  &::before{
    @extend .corner;
    transform: rotate(-90deg);
    left:-$corner-size;
    top:0;
  }
  &::after{
    @extend .corner;
    transform: rotate(-90deg);

    right:0;
    bottom:-$corner-size;
  }
}
.inset--bottom-left{
  border-radius:0 12px 0 0;

  &::before{
    @extend .corner;
    transform: rotate(90deg);
    left:0;
    top:-$corner-size;
  }
  &::after{
    @extend .corner;
    transform: rotate(90deg);
    right:-$corner-size;
    bottom:0;
  }
}
.inset--bottom-right{
  border-radius:12px 0 0 0;

  &::before{
    @extend .corner;
    
    right:0;
    top:-$corner-size;
  }
  &::after{
    @extend .corner;

    left:-$corner-size;
    bottom:0;
  }
}
